/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>

/ {
    macros {
        amin: amin {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(T) &kp EXCL &kp N4 &kp N7 &kp M &kp C &kp M &kp S &kp AT &kp D &kp M &kp I &kp N &kp ENTER>;
            label = "AMIN";
        };

        Bi: Bi {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(B) &kp I &kp LS(B) &kp I &kp LS(O) &kp N2 &kp N2 &kp N1 &kp N0 &kp RET>;
            label = "BI";
        };

        bracket: bracket {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LPAR &kp RPAR &kp LEFT>;
            label = "BRACKET";
        };

        igt: igt {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(T) &kp EXCL &kp N1 &kp G &kp T &kp W &kp I &kp N &kp A &kp C &kp C &kp NUMBER_2 &kp RET>;
            label = "IGT";
        };

        curly: curly {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACE &kp RBRC &kp LEFT_ARROW>;
            label = "CURLY";
        };

        dqoute: dqoute {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp DOUBLE_QUOTES &kp DOUBLE_QUOTES &kp LEFT>;
            label = "DQOUTE";
        };

        squote: squote {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp SQT &kp SQT &kp LEFT>;
            label = "SQUOTE";
        };

        lmgr: lmgr {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp LS(T) &kp EXCL &kp N4 &kp N7 &kp M &kp C &kp L &kp M &kp G &kp R &kp RET>;
            label = "LMGR";
        };
    };

    combos {
        compatible = "zmk,combos";

        altab {
            bindings = <&kp LA(TAB)>;
            key-positions = <12 36>;
        };
    };

    behaviors {
        Taptab: Taptab {
            compatible = "zmk,behavior-tap-dance";
            label = "TAPTAB";
            #binding-cells = <0>;
            bindings = <&kp TAB>, <&kp LA(TAB)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            display-name = "Base";
            bindings = <
&kp ESCAPE          &kp Q  &kp W  &kp E     &kp R  &kp T        &kp Y    &kp U  &kp I      &kp O    &kp P     &kp BSPC
&mt LEFT_SHIFT TAB  &kp A  &kp S  &kp D     &kp F  &kp G        &kp H    &kp J  &kp K      &kp L    &kp SEMI  &kp BSLH
&mt LEFT_ALT LCTRL  &kp Z  &kp X  &kp C     &kp V  &kp B        &kp N    &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp ESC
                                  &kp LGUI  &mo 1  &kp SPACE    &kp RET  &mo 2  &kp PSCRN
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Lower";
            bindings = <
&kp ESC             &trans  &kp F2  &trans    &trans  &kt LA(LC(DEL))    &kp NUMBER_7  &kp N8        &kp N9        &kp DELETE  &kp UP_ARROW  &kp BACKSPACE
&mt LEFT_SHIFT TAB  &trans  &trans  &igt      &Bi     &amin              &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp LEFT    &kp DOWN      &kp RIGHT_ARROW
&mt LEFT_ALT LCTRL  &trans  &trans  &trans    &trans  &lmgr              &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp HOME    &Taptab       &kp END
                                    &kp LGUI  &trans  &kp SPACE          &kp RET       &kp N0        &kp DOT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Raise";
            bindings = <
&kp ESC         &kp EXCL  &kp AT  &kp HASH     &kp DLLR  &kp PRCNT            &kp CARET  &kp AMPS   &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &kp BSPC
&kp LEFT_SHIFT  &trans    &trans  &trans       &trans    &trans               &kp MINUS  &kp EQUAL  &kp LBKT         &kp RBKT  &kp BSLH  &kp GRAVE
&kp LCTRL       &trans    &trans  &trans       &trans    &ext_power EP_TOG    &kp UNDER  &kp PLUS   &kp LBRC         &kp RBRC  &kp PIPE  &kp TILDE
                                  &bootloader  &trans    &kp SPACE            &kp RET    &trans     &bootloader
            >;
        };
    };
};
